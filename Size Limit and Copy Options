CREATE OR REPLACE DATABASE COPY_DB

CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS(
ORDER_ID VARCHAR(30),
AMOUNT VARCHAR(30),
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30)
);


CREATE OR REPLACE STAGE EXERCISE_DB.EXTERNAL_STAGES.AWS_SIZE
URL = 's3://snowflakebucket-copyoption/size/';

LIST @EXERCISE_DB.EXTERNAL_STAGES.AWS_SIZE;

COPY INTO COPY_DB.PUBLIC.ORDERS
FROM @EXERCISE_DB.EXTERNAL_STAGES.AWS_SIZE
file_format = (type = csv field_delimiter = ',' skip_header = 1)
pattern = '.*Order.*'
SIZE_LIMIT = 20000;

CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS(
ORDER_ID VARCHAR(30),
AMOUNT VARCHAR(30),
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30)
);

COPY INTO COPY_DB.PUBLIC.ORDERS
FROM @EXERCISE_DB.EXTERNAL_STAGES.AWS_SIZE
file_format = (type = csv field_delimiter = ',' skip_header = 1)
pattern = '.*Order.*'
SIZE_LIMIT = 60000;

CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS(
ORDER_ID VARCHAR(30),
AMOUNT VARCHAR(30),
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30)
);


CREATE OR REPLACE STAGE EXERCISE_DB.EXTERNAL_STAGES.AWS_Return_field
URL = 's3://snowflakebucket-copyoption/returnfailed/';

LIST @EXERCISE_DB.EXTERNAL_STAGES.AWS_Return_field;

COPY INTO COPY_DB.PUBLIC.ORDERS
FROM @EXERCISE_DB.EXTERNAL_STAGES.AWS_Return_field
file_format = (type = csv field_delimiter = ',' skip_header = 1)
pattern = '.*Order.*'
ON_ERROR = 'CONTINUE'
RETURN_FAILED_ONLY = TRUE;

CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS(
ORDER_ID VARCHAR(30),
AMOUNT VARCHAR(30),
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(10),
SUBCATEGORY VARCHAR(30)
);

CREATE OR REPLACE STAGE EXERCISE_DB.EXTERNAL_STAGES.AWS_SIZE
URL = 's3://snowflakebucket-copyoption/size/';

LIST @EXERCISE_DB.EXTERNAL_STAGES.AWS_SIZE;

COPY INTO COPY_DB.PUBLIC.ORDERS
FROM @EXERCISE_DB.EXTERNAL_STAGES.AWS_Return_field
file_format = (type = csv field_delimiter = ',' skip_header = 1)
pattern = 'Orders.csv'
TRUNCATECOLUMNS = true

SELECT * FROM COPY_DB.PUBLIC.ORDERS;


COPY INTO COPY_DB.PUBLIC.ORDERS
FROM @EXERCISE_DB.EXTERNAL_STAGES.AWS_Return_field
file_format = (type = csv field_delimiter = ',' skip_header = 1)
pattern = 'Orders.csv'
TRUNCATECOLUMNS = true
FORCE = TRUE;

SELECT * FROM COPY_DB.PUBLIC.ORDERS;



CREATE OR REPLACE table COPY_DB.public.employees(
customer_id int,
first_name varchar(50),
last_name varchar(50),
email varchar(50),
age int,
date_part varchar(50)
);

CREATE OR REPLACE STAGE EXERCISE_DB.EXTERNAL_STAGES.CPOY_ASSIGNMENT
file_format = (FORMAT_NAME = )
URL = 's3://snowflake-assignments-mc/copyoptions/example2';

LIST @EXERCISE_DB.EXTERNAL_STAGES.CPOY_ASSIGNMENT;

Create file format MANAGE_DB.FILE_FORMATS.COPY_Assinment
set skip_header = 1;;

ALTER file format MANAGE_DB.FILE_FORMATS.COPY_Assinment
set skip_header = 1;


COPY INTO COPY_DB.public.employees
FROM @EXERCISE_DB.EXTERNAL_STAGES.CPOY_ASSIGNMENT
file_format=(format_name = MANAGE_DB.FILE_FORMATS.COPY_Assinment)
VALIDATION_MODE = RETURN_ERRORS;

COPY INTO COPY_DB.public.employees
FROM @EXERCISE_DB.EXTERNAL_STAGES.CPOY_ASSIGNMENT
file_format=(format_name = MANAGE_DB.FILE_FORMATS.COPY_Assinment)
ON_ERROR = 'CONTINUE'
TRUNCATECOLUMNS = TRUE;
