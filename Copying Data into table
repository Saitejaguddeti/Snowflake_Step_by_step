CREATE OR REPLACE DATABASE COPY_DB;

CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS(
ORDER_ID VARCHAR(30),
AMOUNT VARCHAR(30),
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30)
);


CREATE OR REPLACE SCHEMA COPY_DB.COPY_OPTIONS_STAGE;

CREATE OR REPLACE STAGE COPY_DB.COPY_OPTIONS_STAGE.aws_copy
url = 's3://snowflakebucket-copyoption/size/';


LIST @COPY_DB.COPY_OPTIONS_STAGE.aws_copy;

COPY INTO COPY_DB.PUBLIC.ORDERS
FROM @COPY_DB.COPY_OPTIONS_STAGE.aws_copy
file_format=(type = csv field_delimiter = ',' skip_header = 1)
pattern = '.*Orders.*'
VALIDATION_MODE = RETURN_ERRORS;

select * from COPY_DB.PUBLIC.ORDERS;

CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS(
ORDER_ID VARCHAR(30),
AMOUNT VARCHAR(30),
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30)
);


COPY INTO COPY_DB.PUBLIC.ORDERS
FROM @COPY_DB.COPY_OPTIONS_STAGE.aws_copy
file_format=(type = csv field_delimiter = ',' skip_header = 1)
pattern = '.*Orders.*'
VALIDATION_MODE = RETURN_20_ROWS;


CREATE OR REPLACE STAGE COPY_DB.COPY_OPTIONS_STAGE.aws_copy_error_return
url = 's3://snowflakebucket-copyoption/returnfailed/';

LIST @COPY_DB.COPY_OPTIONS_STAGE.aws_copy_error_return;

COPY INTO COPY_DB.PUBLIC.ORDERS
FROM @COPY_DB.COPY_OPTIONS_STAGE.aws_copy_error_return
file_format=(type = csv field_delimiter = ',' skip_header = 1)
pattern = 'OrderDetails_error.csv'
VALIDATION_MODE = RETURN_ERRORS;

COPY INTO COPY_DB.PUBLIC.ORDERS
FROM @COPY_DB.COPY_OPTIONS_STAGE.aws_copy_error_return
file_format=(type = csv field_delimiter = ',' skip_header = 1)
pattern = '.*Order.*'
VALIDATION_MODE = RETURN_1_ROWS;




CREATE OR REPLACE TABLE COPY_DB.PUBLIC.Employees(
Customer_id int,
first_name varchar(50),
last_name varchar(50),
email varchar(50),
age int,
department varchar(50)
);

CREATE OR REPLACE STAGE COPY_DB.COPY_OPTIONS_STAGE.aws_copy_assignment
url = 's3://snowflake-assignments-mc/copyoptions/example1';

LIST @COPY_DB.COPY_OPTIONS_STAGE.aws_copy_assignment;

CREATE OR REPLACE SCHEMA COPY_DB.COPY_OPTIONS_FILE_FORMAT;

CREATE OR REPLACE file format COPY_DB.COPY_OPTIONS_FILE_FORMAT.copy_file_format;

ALTER file format COPY_DB.COPY_OPTIONS_FILE_FORMAT.copy_file_format
SET skip_header = 1;

COPY INTO COPY_DB.PUBLIC.Employees 
FROM @COPY_DB.COPY_OPTIONS_STAGE.aws_copy_assignment
file_format = (FORMAT_NAME = COPY_DB.COPY_OPTIONS_FILE_FORMAT.copy_file_format)
VALIDATION_MODE = RETURN_ERRORS;

COPY INTO COPY_DB.PUBLIC.Employees 
FROM @COPY_DB.COPY_OPTIONS_STAGE.aws_copy_assignment
file_format = (FORMAT_NAME = COPY_DB.COPY_OPTIONS_FILE_FORMAT.copy_file_format)
ON_ERROR = 'CONTINUE';



//Rejected rows 

CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS(
ORDER_ID VARCHAR(30),
AMOUNT VARCHAR(30),
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30)
);

LIST @COPY_DB.COPY_OPTIONS_STAGE.aws_copy

COPY INTO COPY_DB.PUBLIC.ORDERS
FROM @COPY_DB.COPY_OPTIONS_STAGE.aws_copy_error_return
file_format=(type = csv field_delimiter = ',' skip_header = 1)
pattern = 'OrderDetails_error.csv'
VALIDATION_MODE = RETURN_ERRORS;



Create OR REPLACE TABLE rejected AS 
select rejected_record from table(result_scan('01b4267b-0205-1fc5-0005-a0430002e83e'));

INSERT INTO rejected 
select rejected_record from table(result_scan('01b4267b-0205-1fc5-0005-a0430002e83e'));


SELECT * FROM rejected;


CREATE OR REPLACE TABLE rejected_values as 
SELECT SPLIT_PART(rejected_record,',',1) as ORDER_ID,
SPLIT_PART(rejected_record,',',2) as AMOUNT,
SPLIT_PART(rejected_record,',',3) as PROFIT,
SPLIT_PART(rejected_record,',',4) as QUANTITY,
SPLIT_PART(rejected_record,',',5) as CATEGORY,
SPLIT_PART(rejected_record,',',6) as SUBCATEGORY
FROM rejected;

SELECT * FROM rejected_values;

